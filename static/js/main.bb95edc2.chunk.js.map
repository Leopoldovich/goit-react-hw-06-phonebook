{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","redux/contacts/actions.js","redux/contacts/types.js","redux/contacts/selectors.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/contacts/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","Filter","value","onChange","dispatch","useDispatch","useSelector","length","className","s","filterWrapper","type","event","target","filterInput","prototype","PropTypes","string","func","isRequired","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","reset","preventDefault","form","input","pattern","title","required","btn","ContactListItem","contact","onDeleteContact","contactItem","btnDel","onClick","shape","ContactList","visibleContacts","onDelete","contactList","map","arrayOf","App","createReducer","find","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blscklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bb95edc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3yb1t\",\"filterInput\":\"Filter_filterInput__1DZ8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__1jDg1\",\"btnDel\":\"ContactListItem_btnDel__2XiV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3cOuC\"};","import { createAction } from '@reduxjs/toolkit';\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: { id: uuidv4(), name, number },\n}));\n\nexport const deleteContact = createAction(DELETE_CONTACT);\n\nexport const filterContact = createAction(FILTER_CONTACT);\n","export const ADD_CONTACT = 'contacts/add';\nexport const DELETE_CONTACT = 'contacts/delete';\nexport const FILTER_CONTACT = 'contacts/filter';\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/actions';\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\n\nconst Filter = ({ value, onChange }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  if (!contacts.length)\n    return <p>Your phonebook is empty. Please add contact.</p>;\n\n  return (\n    <div className={s.filterWrapper}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={event => dispatch(filterContact(event.target.value))}\n          className={s.filterInput}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.prototype = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/actions';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(addContact(name, number));\n\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={s.contactItem}>\n      {contact.name}: {contact.number}\n      <button\n        type=\"button\"\n        className={s.btnDel}\n        onClick={() => onDeleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.prototype = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ContactListItem from '../ContactListItem';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/actions';\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const onDelete = id => dispatch(deleteContact(id));\n  return (\n    <ul className={s.contactList}>\n      {visibleContacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          contact={contact}\n          onDeleteContact={onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.prototype = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","// import { useState, useEffect } from 'react';\nimport './App.css';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n// import { v4 as uuidv4 } from 'uuid';\n// import useLocalStorage from './hooks/useLocalStorage';\n\nfunction App() {\n  // const [contacts, setContacts] = useLocalStorage('contacts', [\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  // ]);\n\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const submitFromForm = data => {\n  //   const { name } = data;\n  //   const nameAlreadyIs = contacts.find(contact => contact.name === name);\n\n  //   if (nameAlreadyIs) {\n  //     alert(`${name} is already in contacts`);\n  //     return;\n  //   }\n  //   data.id = uuidv4();\n  //   setContacts(state => [...state, data]);\n  // };\n\n  // const changeFilter = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const getVisibleContacts = () => {\n  //   if (filter) {\n  //     const normalizedFilter = filter.toLowerCase();\n  //     const newContactsArr = contacts.filter(({ name }) =>\n  //       name.toLowerCase().includes(normalizedFilter),\n  //     );\n  //     return newContactsArr;\n  //   }\n  //   return contacts;\n  // };\n\n  // const deleteContact = id => {\n  //   setContacts(contacts.filter(contact => contact.id !== id));\n  // };\n\n  // const onVisibleContacts = getVisibleContacts();\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2> Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { addContact, deleteContact, filterContact } from './actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) =>\n    state.find(({ name }) => name === payload.name)\n      ? alert(`${payload.name} is already in contacts`)\n      : [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blscklist: 'filter',\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__-r_po\",\"input\":\"ContactForm_input__2oSXk\",\"btn\":\"ContactForm_btn__bb008\"};"],"sourceRoot":""}